{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "synapse-linkedin"
		},
		"synapse-linkedin-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synapse-linkedin-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:synapse-linkedin.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"chalki_key_vault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://formula1-chalki-vault.vault.azure.net/"
		},
		"synapse-linkedin-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://chalkilinkedin.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/CopySales')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "copy sales data from sales container",
				"activities": [
					{
						"name": "Copy_m9g",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "sales//"
							},
							{
								"name": "Destination",
								"value": "dbo.DailySales"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "SqlPoolSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "synapse-linkedin-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "StoreCode",
											"type": "String"
										},
										"sink": {
											"name": "StoreCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String"
										},
										"sink": {
											"name": "SaleDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "TotalSales",
											"type": "String"
										},
										"sink": {
											"name": "TotalSales",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "TotalAmount",
											"type": "String"
										},
										"sink": {
											"name": "TotalAmount",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_m9g",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_m9g",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_m9g')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_m9g')]",
				"[concat(variables('workspaceId'), '/linkedServices/synapse-linkedin-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_m9g')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "StoreCode",
						"type": "varchar"
					},
					{
						"name": "SaleDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "TotalSales",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalAmount",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DailySales"
				},
				"sqlPool": {
					"referenceName": "salesdw",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/salesdw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_m9g')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-linkedin-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "sales"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "StoreCode",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "TotalSales",
						"type": "String"
					},
					{
						"name": "TotalAmount",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-linkedin-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/chalki_key_vault')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('chalki_key_vault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-linkedin-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapse-linkedin-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-linkedin-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('synapse-linkedin-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CopyCommand')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "DedicatedSqlPool"
				},
				"content": {
					"query": "COPY INTO dbo.DailySalesCopyCommand\n(StoreCode default '0000' 1, SaleDate 2, TotalSales 3, TotalAmount 4)\nfrom 'https://chalkilinkedin.blob.core.windows.net/sales/**'\nWITH \n(\n    FILE_TYPE = 'CSV',\n    CREDENTIAL = (IDENTITY = 'Shared Access Signature',\n    SECRET= '?sv=2021-04-10&st=2023-01-04T11%3A25%3A10Z&se=2023-03-31T10%3A25%3A00Z&sr=c&sp=rl&sig=iAU6%2Fhslmki4A6Ycx7K4XdoMV4aFSzXh7WLr%2FPcfaUE%3D'),\n    ENCODING = 'UTF8',\n    FIELDTERMINATOR = ',',\n    FIRSTROW=2\n)\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "salesdw",
						"poolName": "salesdw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DailySCopyTable')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "DedicatedSqlPool"
				},
				"content": {
					"query": "CREATE TABLE dbo.DailySalesCopyCommand\n(\n    StoreCode VARCHAR(100) NOT NULL,\n    SaleDate DATETIME2 NOT NULL,\n    TotalSales INT NOT NULL,\n    TotalAmount INT NOT NULL\n)\nWITH(\n    DISTRIBUTION = HASH(StoreCode),\n    CLUSTERED COLUMNSTORE INDEX\n)\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "salesdw",
						"poolName": "salesdw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DailySTable')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "DedicatedSqlPool"
				},
				"content": {
					"query": "CREATE TABLE dbo.DailySales\n(\n    StoreCode VARCHAR(100) NOT NULL,\n    SaleDate DATETIME2 NOT NULL,\n    TotalSales INT NOT NULL,\n    TotalAmount INT NOT NULL\n)\nWITH(\n    DISTRIBUTION = HASH(StoreCode),\n    CLUSTERED COLUMNSTORE INDEX\n)\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "salesdw",
						"poolName": "salesdw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PolybaseCopy')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "DedicatedSqlPool"
				},
				"content": {
					"query": "DROP MASTER KEY\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'VerySecretPassword@@';\n\nCREATE DATABASE SCOPED CREDENTIAL SalesDataCredentials\n    WITH IDENTITY = 'user', Secret = '5k89N5ixOmJJ2dhOGmz/Xi6XbRLpTYxgT+guSujk4yFDQVfw7RbwYZcuE6woaWrPpQcQm2nfeIiv+AStooqQTQ==';\n\nCREATE EXTERNAL DATA SOURCE SalesDataSource WITH\n( TYPE = HADOOP,\nLOCATION = 'abfs://sales@chalkilinkedin.dfs.core.windows.net',\nCREDENTIAL =SalesDataCredentials\n)\n\nCREATE EXTERNAL FILE FORMAT textdelimited1\nWITH (\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS (\n        FIELD_TERMINATOR = ',',\n        STRING_DELIMITER = '\"',\n        FIRST_ROW = 2\n        )\n);\nDROP EXTERNAL table dbo.DailySales_poly;\nCREATE EXTERNAL TABLE dbo.DailySales_poly\n(\n    StoreCode VARCHAR(100) NOT NULL,\n    SaleDate DATETIME2 NOT NULL,\n    TotalSales INT NOT NULL,\n    TotalAmount INT NOT NULL\n)\nWITH (\n    LOCATION = 'SalesData/*.csv',\n    DATA_SOURCE = SalesDataSource,\n    FILE_FORMAT = textdelimited1,\n    REJECT_TYPE = value,\n    REJECT_VALUE = 0\n);\n\nSELECT TOP 10 * FROM dbo.DailySales_poly\n\n\nCREATE TABLE dbo.DailySales_CTAS\nWITH (DISTRIBUTION= HASH(StoreCode)\n) AS\nSELECT * FROM dbo.DailySales_poly;\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/salesdw')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "uksouth"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sales_data_discovery_01')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ServerlessPool"
				},
				"content": {
					"query": "select top 10 *\nfrom openrowset(\n    bulk 'https://chalkilinkedin.blob.core.windows.net/sales/SalesData',\n    parser_version = '2.0',\n    format='csv',\n    firstrow = 2\n     ) as row\n\n\nselect top 10 row.StoreCode, row.Date,row.TotalSales, row.TotalAmount AS [filename]\nfrom openrowset(\n    bulk 'https://chalkilinkedin.blob.core.windows.net/sales/SalesData',\n    parser_version = '2.0',\n    format='csv',\n    firstrow = 2 )\n    with(\n        StoreCode VARCHAR(100) 1,\n        Date DATE 2,\n        TotalSales BIGINT 3,\n        TotalAmount BIGINT 4\n    ) as row\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sales_date_timestamp')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ServerlessPool"
				},
				"content": {
					"query": "SELECT TOP 10 *,\nrows.filepath(1) as file_folder,\nrows.filepath(2) as fpath,\nCAST(rows.filepath(2) AS DATE) AS IngestDate,\nrows.filename() as fname\n\nFROM \nOPENROWSET\n(\n    BULK 'https://chalkilinkedin.blob.core.windows.net/serverless-data/*/*.csv',\n    PARSER_VERSION = '2.0',\n    FORMAT = 'CSV',\n    FIRST_ROW = 2\n)\nAS rows\n\n\nSELECT TOP 10 *,\nCAST(rows.filepath(2) AS DATE) AS IngestDate\nFROM \nOPENROWSET\n(\n    BULK 'https://chalkilinkedin.blob.core.windows.net/serverless-data/*/*.csv',\n    PARSER_VERSION = '2.0',\n    FORMAT = 'CSV',\n    FIRST_ROW = 2\n)\nAS rows\nWHERE CAST(rows.filepath(2) AS DATE) >= '2023-06-09'",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_logical_DWH')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ServerlessPool"
				},
				"content": {
					"query": "CREATE DATABASE SalesLDW\nALTER DATABASE SalesLDW COLLATE Latin1_General_100_BIN2_UTF8;\n\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'SuperSecretEncryptionKey$$';\n\nCREATE DATABASE SCOPED CREDENTIAL SalesStorageCredentials\nWITH IDENTITY = 'SHARED ACCESS SIGNATURE',\n    SECRET = '?sv=2020-02-10&st=2023-01-08T11%3A01%3A30Z&se=2023-01-16T11%3A01%3A00Z&sr=d&sp=racwdlmeop&sig=b5STnvN0HB1PuGCO04YhGaBxl4%2FOPyOd60ye%2BQs%2B%2F8E%3D&sdd=1';\n\nCREATE EXTERNAL DATA SOURCE SalesData WITH (\n    CREDENTIAL = SalesStorageCredentials,\n    LOCATION = 'https://chalkilinkedin.blob.core.windows.net');\n\nCREATE SCHEMA LDW authorization dbo;\n\nCREATE VIEW LDW.DailySalesView\nAS\nSELECT *,\nCAST(rows.filepath(1) AS DATE) AS IngestDate\nFROM \nOPENROWSET(\n    BULK'serverless-data/PartitionedSalesData/*.csv',\n    DATA_SOURCE = 'SalesData',\n    PARSER_VERSION = '2.0',\n    FORMAT = 'CSV',\n    FIRSTROW = 2\n)\nWITH (\n    StoreCode VARCHAR(200) 1,\n    TotalSales BIGINT 2,\n    TotalAmount BIGINT 3\n)\nAS rows;\n\nSELECT TOP 10 * FROM LDW.DailySalesView;\n\n\nCREATE VIEW LDW.StoresView\nAS\nSELECT *\nFROM\nOPENROWSET\n(\n    BULK'stores/stores.csv',\n    DATA_SOURCE = 'SalesData',\n    PARSER_VERSION = '2.0',\n    FORMAT = 'csv',\n    FIRSTROW = 2\n)\nWITH (\n    City VARCHAR(100) 1,\n    Code VARCHAR(10) 2,\n    Size VARCHAR(10) 3,\n    Lattitude VARCHAR(100) 4,\n    Longitude VARCHAR(100) 5,\n    Population BIGINT 6,\n    State VARCHAR(200) 7\n)\nAS rows\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "SalesLDW",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/stores_LDW')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ServerlessPool"
				},
				"content": {
					"query": "CREATE DATABASE SCOPED CREDENTIAL StoresStorageCredentials\nWITH IDENTITY = 'SHARED ACCESS SIGNATURE',\n    SECRET = '?sv=2020-02-10&st=2023-01-08T11%3A45%3A15Z&se=2023-01-17T11%3A45%3A00Z&sr=c&sp=racwdlmeop&sig=U%2F75AXku49%2BMs0Xie%2Bs7PuKxbZqvSqG16HOhTzEb7q0%3D';\n\nCREATE EXTERNAL DATA SOURCE StoresData WITH (\n    CREDENTIAL = StoresStorageCredentials,\n    LOCATION = 'https://chalkilinkedin.blob.core.windows.net');\n\n\nCREATE VIEW LDW.StoresView\nAS\nSELECT *\nFROM\nOPENROWSET\n(\n    BULK'stores/stores.csv',\n    DATA_SOURCE = 'StoresData',\n    PARSER_VERSION = '2.0',\n    FORMAT = 'csv',\n    FIRSTROW = 2\n)\nWITH (\n    City VARCHAR(100) 1,\n    Code VARCHAR(10) 2,\n    Size VARCHAR(10) 3,\n    Lattitude VARCHAR(100) 4,\n    Longitude VARCHAR(100) 5,\n    Population BIGINT 6,\n    State VARCHAR(200) 7\n)\nAS rows",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "SalesLDW",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sales_per_stores')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ServerlessPool"
				},
				"content": {
					"query": "SELECT \nstores.Code AS StoreCode,\nSUM(TotalAmount) AS TotalSalesAmount\nFROM LDW.StoresView as stores\nINNER JOIN LDW.DailySalesView AS sales ON stores.Code = sales.StoreCode\nGROUP BY stores.Code",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "SalesLDW",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ServerlessPool"
				},
				"content": {
					"query": "EXEC sys.sp_create_openrowset_statistics N'\nSELECT Code\nFROM\nOPENROWSET\n\n(\n    BULK''stores/stores.csv'',\n    DATA_SOURCE = ''StoresData'',\n    PARSER_VERSION = ''2.0'',\n    FORMAT = ''csv'',\n    FIRSTROW = 2\n)\nWITH (\n    City VARCHAR(100) 1,\n    Code VARCHAR(10) 2,\n    Size VARCHAR(10) 3,\n    Lattitude VARCHAR(100) 4,\n    Longitude VARCHAR(100) 5,\n    Population BIGINT 6,\n    State VARCHAR(200) 7\n)\nAS rows\n'\n\nsys.sp_drop_openrowset_statistics N'SELECT Code\nFROM\nOPENROWSET\n\n(\n    BULK''stores/stores.csv'',\n    DATA_SOURCE = ''StoresData'',\n    PARSER_VERSION = ''2.0'',\n    FORMAT = ''csv'',\n    FIRSTROW = 2\n)\nWITH (\n    City VARCHAR(100) 1,\n    Code VARCHAR(10) 2,\n    Size VARCHAR(10) 3,\n    Lattitude VARCHAR(100) 4,\n    Longitude VARCHAR(100) 5,\n    Population BIGINT 6,\n    State VARCHAR(200) 7\n)\nAS rows\n'",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "SalesLDW",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		}
	]
}